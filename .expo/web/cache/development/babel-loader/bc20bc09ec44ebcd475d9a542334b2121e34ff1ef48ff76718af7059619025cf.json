{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nvar DEV_API_URL = Platform.select({\n  ios: 'http://10.0.0.216:8501/api',\n  android: 'http://10.0.0.216:8501/api',\n  default: 'http://10.0.0.216:8501/api'\n});\nvar PROD_API_URL = 'https://your-production-api.com/api';\nexport var API_URL = __DEV__ ? DEV_API_URL : PROD_API_URL;\nvar fallbackWords = {\n  general: {\n    3: ['cat', 'dog', 'hat'],\n    4: ['book', 'lamp', 'desk'],\n    5: ['house', 'phone', 'table']\n  },\n  animals: {\n    3: ['cat', 'dog', 'owl'],\n    4: ['bear', 'lion', 'wolf'],\n    5: ['tiger', 'zebra', 'koala']\n  },\n  food: {\n    3: ['pie', 'ham', 'egg'],\n    4: ['cake', 'soup', 'fish'],\n    5: ['pizza', 'pasta', 'salad']\n  },\n  places: {\n    3: ['bay', 'sea', 'sky'],\n    4: ['city', 'town', 'park'],\n    5: ['beach', 'hotel', 'plaza']\n  },\n  science: {\n    3: ['lab', 'dna', 'ion'],\n    4: ['atom', 'cell', 'gene'],\n    5: ['laser', 'quark', 'space']\n  },\n  tech: {\n    3: ['app', 'web', 'cpu'],\n    4: ['code', 'data', 'wifi'],\n    5: ['cloud', 'phone', 'robot']\n  },\n  music: {\n    3: ['pop', 'rap', 'mix'],\n    4: ['jazz', 'rock', 'song'],\n    5: ['blues', 'piano', 'drums']\n  }\n};\nexport var getFallbackHint = function getFallbackHint(question, word) {\n  var lowerQuestion = question.toLowerCase();\n  var lowerWord = word.toLowerCase();\n  if (lowerQuestion.includes('start') && lowerQuestion.includes('letter')) {\n    return `The word ${lowerWord[0] === lowerWord[0].toLowerCase() ? 'does' : 'does not'} start with '${lowerWord[0]}'`;\n  }\n  if (lowerQuestion.includes('end') && lowerQuestion.includes('letter')) {\n    return `The word ${lowerWord[lowerWord.length - 1] === lowerWord[lowerWord.length - 1].toLowerCase() ? 'does' : 'does not'} end with '${lowerWord[lowerWord.length - 1]}'`;\n  }\n  if (lowerQuestion.includes('contain') || lowerQuestion.includes('has')) {\n    var letters = lowerQuestion.match(/[a-z]/g) || [];\n    for (var letter of letters) {\n      if (lowerWord.includes(letter)) {\n        return `Yes, the word contains the letter '${letter}'`;\n      }\n    }\n    return 'No, the word does not contain that letter';\n  }\n  if (lowerQuestion.includes('length') || lowerQuestion.includes('long')) {\n    return `The word is ${word.length} letters long`;\n  }\n  return 'I cannot answer that question. Try asking about specific letters or the word length.';\n};\nexport var getFallbackWord = function getFallbackWord(category, length) {\n  var words = fallbackWords[category][length] || fallbackWords.general[length];\n  return words[Math.floor(Math.random() * words.length)];\n};","map":{"version":3,"names":["DEV_API_URL","Platform","select","ios","android","default","PROD_API_URL","API_URL","__DEV__","fallbackWords","general","animals","food","places","science","tech","music","getFallbackHint","question","word","lowerQuestion","toLowerCase","lowerWord","includes","length","letters","match","letter","getFallbackWord","category","words","Math","floor","random"],"sources":["C:/Users/CICD Student/cursor ai agent/game_guess/src/config/api.ts"],"sourcesContent":["import { Platform } from 'react-native';\r\nimport { Category } from '../types/navigation';\r\n\r\n// API configuration\r\nconst DEV_API_URL = Platform.select({\r\n  ios: 'http://10.0.0.216:8501/api',\r\n  android: 'http://10.0.0.216:8501/api',\r\n  default: 'http://10.0.0.216:8501/api'\r\n});\r\n\r\nconst PROD_API_URL = 'https://your-production-api.com/api';  // Update with your production API URL\r\n\r\nexport const API_URL = __DEV__ ? DEV_API_URL : PROD_API_URL;\r\n\r\n// Fallback word lists\r\nconst fallbackWords: Record<Category, Record<number, string[]>> = {\r\n  general: {\r\n    3: ['cat', 'dog', 'hat'],\r\n    4: ['book', 'lamp', 'desk'],\r\n    5: ['house', 'phone', 'table'],\r\n    // Add more words for other lengths\r\n  },\r\n  animals: {\r\n    3: ['cat', 'dog', 'owl'],\r\n    4: ['bear', 'lion', 'wolf'],\r\n    5: ['tiger', 'zebra', 'koala'],\r\n  },\r\n  food: {\r\n    3: ['pie', 'ham', 'egg'],\r\n    4: ['cake', 'soup', 'fish'],\r\n    5: ['pizza', 'pasta', 'salad'],\r\n  },\r\n  places: {\r\n    3: ['bay', 'sea', 'sky'],\r\n    4: ['city', 'town', 'park'],\r\n    5: ['beach', 'hotel', 'plaza'],\r\n  },\r\n  science: {\r\n    3: ['lab', 'dna', 'ion'],\r\n    4: ['atom', 'cell', 'gene'],\r\n    5: ['laser', 'quark', 'space'],\r\n  },\r\n  tech: {\r\n    3: ['app', 'web', 'cpu'],\r\n    4: ['code', 'data', 'wifi'],\r\n    5: ['cloud', 'phone', 'robot'],\r\n  },\r\n  music: {\r\n    3: ['pop', 'rap', 'mix'],\r\n    4: ['jazz', 'rock', 'song'],\r\n    5: ['blues', 'piano', 'drums'],\r\n  }\r\n};\r\n\r\n// Fallback hint generation\r\nexport const getFallbackHint = (question: string, word: string): string => {\r\n  const lowerQuestion = question.toLowerCase();\r\n  const lowerWord = word.toLowerCase();\r\n\r\n  if (lowerQuestion.includes('start') && lowerQuestion.includes('letter')) {\r\n    return `The word ${lowerWord[0] === lowerWord[0].toLowerCase() ? 'does' : 'does not'} start with '${lowerWord[0]}'`;\r\n  }\r\n\r\n  if (lowerQuestion.includes('end') && lowerQuestion.includes('letter')) {\r\n    return `The word ${lowerWord[lowerWord.length - 1] === lowerWord[lowerWord.length - 1].toLowerCase() ? 'does' : 'does not'} end with '${lowerWord[lowerWord.length - 1]}'`;\r\n  }\r\n\r\n  if (lowerQuestion.includes('contain') || lowerQuestion.includes('has')) {\r\n    const letters = lowerQuestion.match(/[a-z]/g) || [];\r\n    for (const letter of letters) {\r\n      if (lowerWord.includes(letter)) {\r\n        return `Yes, the word contains the letter '${letter}'`;\r\n      }\r\n    }\r\n    return 'No, the word does not contain that letter';\r\n  }\r\n\r\n  if (lowerQuestion.includes('length') || lowerQuestion.includes('long')) {\r\n    return `The word is ${word.length} letters long`;\r\n  }\r\n\r\n  return 'I cannot answer that question. Try asking about specific letters or the word length.';\r\n};\r\n\r\n// Get a random word from fallback list\r\nexport const getFallbackWord = (category: Category, length: number): string => {\r\n  const words = fallbackWords[category][length] || fallbackWords.general[length];\r\n  return words[Math.floor(Math.random() * words.length)];\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}