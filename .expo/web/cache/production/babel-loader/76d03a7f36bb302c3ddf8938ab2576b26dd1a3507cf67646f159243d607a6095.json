{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{getContentMaxWidth,getMenuItemColor,MAX_WIDTH,MIN_WIDTH}from\"./utils\";import{useInternalTheme}from\"../../core/theming\";import Icon from\"../Icon\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import Text from\"../Typography/Text\";var MenuItem=function MenuItem(_ref){var leadingIcon=_ref.leadingIcon,trailingIcon=_ref.trailingIcon,dense=_ref.dense,title=_ref.title,disabled=_ref.disabled,background=_ref.background,onPress=_ref.onPress,style=_ref.style,containerStyle=_ref.containerStyle,contentStyle=_ref.contentStyle,titleStyle=_ref.titleStyle,customRippleColor=_ref.rippleColor,_ref$testID=_ref.testID,testID=_ref$testID===void 0?'menu-item':_ref$testID,accessibilityLabel=_ref.accessibilityLabel,accessibilityState=_ref.accessibilityState,themeOverrides=_ref.theme,_ref$titleMaxFontSize=_ref.titleMaxFontSizeMultiplier,titleMaxFontSizeMultiplier=_ref$titleMaxFontSize===void 0?1.5:_ref$titleMaxFontSize,hitSlop=_ref.hitSlop;var theme=useInternalTheme(themeOverrides);var _getMenuItemColor=getMenuItemColor({theme:theme,disabled:disabled,customRippleColor:customRippleColor}),titleColor=_getMenuItemColor.titleColor,iconColor=_getMenuItemColor.iconColor,rippleColor=_getMenuItemColor.rippleColor;var isV3=theme.isV3;var containerPadding=isV3?12:8;var iconWidth=isV3?24:40;var minWidth=MIN_WIDTH-(isV3?12:16);var maxWidth=getContentMaxWidth({isV3:isV3,iconWidth:iconWidth,leadingIcon:leadingIcon,trailingIcon:trailingIcon});var titleTextStyle=_objectSpread({color:titleColor},isV3?theme.fonts.bodyLarge:{});var newAccessibilityState=_objectSpread(_objectSpread({},accessibilityState),{},{disabled:disabled});return React.createElement(TouchableRipple,{style:[styles.container,{paddingHorizontal:containerPadding},dense&&styles.md3DenseContainer,style],onPress:onPress,disabled:disabled,testID:testID,background:background,accessibilityLabel:accessibilityLabel,accessibilityRole:\"menuitem\",accessibilityState:newAccessibilityState,rippleColor:rippleColor,hitSlop:hitSlop},React.createElement(View,{style:[styles.row,containerStyle]},leadingIcon?React.createElement(View,{style:[!isV3&&styles.item,{width:iconWidth}],pointerEvents:\"box-none\"},React.createElement(Icon,{source:leadingIcon,size:24,color:iconColor})):null,React.createElement(View,{style:[!isV3&&styles.item,styles.content,{minWidth:minWidth,maxWidth:maxWidth},isV3&&(leadingIcon?styles.md3LeadingIcon:styles.md3WithoutLeadingIcon),contentStyle],pointerEvents:\"none\"},React.createElement(Text,{variant:\"bodyLarge\",selectable:false,numberOfLines:1,testID:`${testID}-title`,style:[!isV3&&styles.title,titleTextStyle,titleStyle],maxFontSizeMultiplier:titleMaxFontSizeMultiplier},title)),isV3&&trailingIcon?React.createElement(View,{style:[!isV3&&styles.item,{width:iconWidth}],pointerEvents:\"box-none\"},React.createElement(Icon,{source:trailingIcon,size:24,color:iconColor})):null));};MenuItem.displayName='Menu.Item';var styles=StyleSheet.create({container:{minWidth:MIN_WIDTH,maxWidth:MAX_WIDTH,height:48,justifyContent:'center'},md3DenseContainer:{height:32},row:{flexDirection:'row'},title:{fontSize:16},item:{marginHorizontal:8},content:{justifyContent:'center'},md3LeadingIcon:{marginLeft:12},md3WithoutLeadingIcon:{marginLeft:4}});export default MenuItem;","map":{"version":3,"names":["React","StyleSheet","View","getContentMaxWidth","getMenuItemColor","MAX_WIDTH","MIN_WIDTH","useInternalTheme","Icon","TouchableRipple","Text","MenuItem","_ref","leadingIcon","trailingIcon","dense","title","disabled","background","onPress","style","containerStyle","contentStyle","titleStyle","customRippleColor","rippleColor","_ref$testID","testID","accessibilityLabel","accessibilityState","themeOverrides","theme","_ref$titleMaxFontSize","titleMaxFontSizeMultiplier","hitSlop","_getMenuItemColor","titleColor","iconColor","isV3","containerPadding","iconWidth","minWidth","maxWidth","titleTextStyle","_objectSpread","color","fonts","bodyLarge","newAccessibilityState","createElement","styles","container","paddingHorizontal","md3DenseContainer","accessibilityRole","row","item","width","pointerEvents","source","size","content","md3LeadingIcon","md3WithoutLeadingIcon","variant","selectable","numberOfLines","maxFontSizeMultiplier","displayName","create","height","justifyContent","flexDirection","fontSize","marginHorizontal","marginLeft"],"sources":["C:\\Users\\CICD Student\\cursor ai agent\\game_guess\\node_modules\\react-native-paper\\src\\components\\Menu\\MenuItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityState,\n  ColorValue,\n  GestureResponderEvent,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  getContentMaxWidth,\n  getMenuItemColor,\n  MAX_WIDTH,\n  MIN_WIDTH,\n} from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple, {\n  Props as TouchableRippleProps,\n} from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = {\n  /**\n   * Title text for the `MenuItem`.\n   */\n  title: React.ReactNode;\n  /**\n   * @renamed Renamed from 'icon' to 'leadingIcon' in v5.x\n   *\n   * Leading icon to display for the `MenuItem`.\n   */\n  leadingIcon?: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Trailing icon to display for the `MenuItem`.\n   */\n  trailingIcon?: IconSource;\n  /**\n   * Whether the 'item' is disabled. A disabled 'item' is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Sets min height with densed layout.\n   */\n  dense?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Specifies the largest possible scale a title font can reach.\n   */\n  titleMaxFontSizeMultiplier?: number;\n  /**\n   * Style that is passed to the root TouchableRipple container.\n   * @optional\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to the outermost container that wraps the entire content, including leading and trailing icons and title text.\n   */\n  containerStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to the content container, which wraps the title text.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to the Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Sets additional distance outside of element in which a press can be detected.\n   */\n  hitSlop?: TouchableRippleProps['hitSlop'];\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * Accessibility label for the Touchable. This is read by the screen reader when the user taps the component.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the Touchable. This is read by the screen reader when the user taps the component.\n   */\n  accessibilityState?: AccessibilityState;\n};\n\n/**\n * A component to show a single list item inside a Menu.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Menu } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View style={{ flex: 1 }}>\n *     <Menu.Item leadingIcon=\"redo\" onPress={() => {}} title=\"Redo\" />\n *     <Menu.Item leadingIcon=\"undo\" onPress={() => {}} title=\"Undo\" />\n *     <Menu.Item leadingIcon=\"content-cut\" onPress={() => {}} title=\"Cut\" disabled />\n *     <Menu.Item leadingIcon=\"content-copy\" onPress={() => {}} title=\"Copy\" disabled />\n *     <Menu.Item leadingIcon=\"content-paste\" onPress={() => {}} title=\"Paste\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst MenuItem = ({\n  leadingIcon,\n  trailingIcon,\n  dense,\n  title,\n  disabled,\n  background,\n  onPress,\n  style,\n  containerStyle,\n  contentStyle,\n  titleStyle,\n  rippleColor: customRippleColor,\n  testID = 'menu-item',\n  accessibilityLabel,\n  accessibilityState,\n  theme: themeOverrides,\n  titleMaxFontSizeMultiplier = 1.5,\n  hitSlop,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { titleColor, iconColor, rippleColor } = getMenuItemColor({\n    theme,\n    disabled,\n    customRippleColor,\n  });\n  const { isV3 } = theme;\n\n  const containerPadding = isV3 ? 12 : 8;\n\n  const iconWidth = isV3 ? 24 : 40;\n\n  const minWidth = MIN_WIDTH - (isV3 ? 12 : 16);\n\n  const maxWidth = getContentMaxWidth({\n    isV3,\n    iconWidth,\n    leadingIcon,\n    trailingIcon,\n  });\n\n  const titleTextStyle = {\n    color: titleColor,\n    ...(isV3 ? theme.fonts.bodyLarge : {}),\n  };\n\n  const newAccessibilityState = { ...accessibilityState, disabled };\n\n  return (\n    <TouchableRipple\n      style={[\n        styles.container,\n        { paddingHorizontal: containerPadding },\n        dense && styles.md3DenseContainer,\n        style,\n      ]}\n      onPress={onPress}\n      disabled={disabled}\n      testID={testID}\n      background={background}\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"menuitem\"\n      accessibilityState={newAccessibilityState}\n      rippleColor={rippleColor}\n      hitSlop={hitSlop}\n    >\n      <View style={[styles.row, containerStyle]}>\n        {leadingIcon ? (\n          <View\n            style={[!isV3 && styles.item, { width: iconWidth }]}\n            pointerEvents=\"box-none\"\n          >\n            <Icon source={leadingIcon} size={24} color={iconColor} />\n          </View>\n        ) : null}\n        <View\n          style={[\n            !isV3 && styles.item,\n            styles.content,\n            { minWidth, maxWidth },\n            isV3 &&\n              (leadingIcon\n                ? styles.md3LeadingIcon\n                : styles.md3WithoutLeadingIcon),\n            contentStyle,\n          ]}\n          pointerEvents=\"none\"\n        >\n          <Text\n            variant=\"bodyLarge\"\n            selectable={false}\n            numberOfLines={1}\n            testID={`${testID}-title`}\n            style={[!isV3 && styles.title, titleTextStyle, titleStyle]}\n            maxFontSizeMultiplier={titleMaxFontSizeMultiplier}\n          >\n            {title}\n          </Text>\n        </View>\n        {isV3 && trailingIcon ? (\n          <View\n            style={[!isV3 && styles.item, { width: iconWidth }]}\n            pointerEvents=\"box-none\"\n          >\n            <Icon source={trailingIcon} size={24} color={iconColor} />\n          </View>\n        ) : null}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nMenuItem.displayName = 'Menu.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    minWidth: MIN_WIDTH,\n    maxWidth: MAX_WIDTH,\n    height: 48,\n    justifyContent: 'center',\n  },\n  md3DenseContainer: {\n    height: 32,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  title: {\n    fontSize: 16,\n  },\n  item: {\n    marginHorizontal: 8,\n  },\n  content: {\n    justifyContent: 'center',\n  },\n  md3LeadingIcon: {\n    marginLeft: 12,\n  },\n  md3WithoutLeadingIcon: {\n    marginLeft: 4,\n  },\n});\n\nexport default MenuItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}