{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"theme\"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r]);}return n;},_extends.apply(null,arguments);}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import RadioButtonAndroid from\"./RadioButtonAndroid\";import RadioButtonIOS from\"./RadioButtonIOS\";import{useInternalTheme}from\"../../core/theming\";var RadioButton=function RadioButton(_ref){var themeOverrides=_ref.theme,props=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var Button=RadioButtonAndroid;return React.createElement(Button,_extends({},props,{theme:theme}));};export default RadioButton;","map":{"version":3,"names":["React","Platform","RadioButtonAndroid","RadioButtonIOS","useInternalTheme","RadioButton","_ref","themeOverrides","theme","props","_objectWithoutProperties","_excluded","Button","createElement","_extends"],"sources":["C:\\Users\\CICD Student\\cursor ai agent\\game_guess\\node_modules\\react-native-paper\\src\\components\\RadioButton\\RadioButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { GestureResponderEvent, Platform } from 'react-native';\n\nimport RadioButtonAndroid from './RadioButtonAndroid';\nimport RadioButtonIOS from './RadioButtonIOS';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\n\nexport type Props = {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * Radio buttons allow the selection a single option from a set.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState('first');\n *\n *   return (\n *     <View>\n *       <RadioButton\n *         value=\"first\"\n *         status={ checked === 'first' ? 'checked' : 'unchecked' }\n *         onPress={() => setChecked('first')}\n *       />\n *       <RadioButton\n *         value=\"second\"\n *         status={ checked === 'second' ? 'checked' : 'unchecked' }\n *         onPress={() => setChecked('second')}\n *       />\n *     </View>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst RadioButton = ({ theme: themeOverrides, ...props }: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n\n  const Button = Platform.select({\n    default: RadioButtonAndroid,\n    ios: RadioButtonIOS,\n  });\n\n  return <Button {...props} theme={theme} />;\n};\n\nexport default RadioButton;\n"],"mappings":"6VAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,QAAA,8CAG9B,MAAO,CAAAC,kBAAkB,4BACzB,MAAO,CAAAC,cAAc,wBACrB,OAASC,gBAAgB,0BAqEzB,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAAC,IAAA,CAAmD,IAAtC,CAAAC,cAAc,CAAAD,IAAA,CAArBE,KAAK,CAAqBC,KAAA,CAAAC,wBAAA,CAAAJ,IAAA,CAAAK,SAAA,EAC/C,GAAM,CAAAH,KAAK,CAAGJ,gBAAgB,CAACG,cAAc,CAAC,CAE9C,GAAM,CAAAK,MAAM,CACDV,kBAET,CAEF,MAAO,CAAAF,KAAA,CAAAa,aAAA,CAACD,MAAM,CAAAE,QAAA,IAAKL,KAAK,EAAED,KAAK,CAAEA,KAAM,EAAE,CAAC,CAC5C,CAAC,CAED,cAAe,CAAAH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}