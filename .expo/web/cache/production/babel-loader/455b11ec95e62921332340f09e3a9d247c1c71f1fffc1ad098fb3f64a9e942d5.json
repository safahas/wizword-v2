{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"label\",\"size\",\"style\",\"labelStyle\",\"color\",\"theme\",\"maxFontSizeMultiplier\"],_excluded2=[\"backgroundColor\"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r]);}return n;},_extends.apply(null,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import useWindowDimensions from\"react-native-web/dist/exports/useWindowDimensions\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from\"../../core/theming\";import{white}from\"../../styles/themes/v2/colors\";import getContrastingColor from\"../../utils/getContrastingColor\";import Text from\"../Typography/Text\";var defaultSize=64;var AvatarText=function AvatarText(_ref){var label=_ref.label,_ref$size=_ref.size,size=_ref$size===void 0?defaultSize:_ref$size,style=_ref.style,labelStyle=_ref.labelStyle,customColor=_ref.color,themeOverrides=_ref.theme,maxFontSizeMultiplier=_ref.maxFontSizeMultiplier,rest=_objectWithoutProperties(_ref,_excluded);var _theme$colors;var theme=useInternalTheme(themeOverrides);var _ref2=StyleSheet.flatten(style)||{},_ref2$backgroundColor=_ref2.backgroundColor,backgroundColor=_ref2$backgroundColor===void 0?(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.primary:_ref2$backgroundColor,restStyle=_objectWithoutProperties(_ref2,_excluded2);var textColor=customColor!=null?customColor:getContrastingColor(backgroundColor,white,'rgba(0, 0, 0, .54)');var _useWindowDimensions=useWindowDimensions(),fontScale=_useWindowDimensions.fontScale;return React.createElement(View,_extends({style:[{width:size,height:size,borderRadius:size/2,backgroundColor:backgroundColor},styles.container,restStyle]},rest),React.createElement(Text,{style:[styles.text,{color:textColor,fontSize:size/2,lineHeight:size/fontScale},labelStyle],numberOfLines:1,maxFontSizeMultiplier:maxFontSizeMultiplier},label));};AvatarText.displayName='Avatar.Text';var styles=StyleSheet.create({container:{justifyContent:'center',alignItems:'center'},text:{textAlign:'center',textAlignVertical:'center'}});export default AvatarText;","map":{"version":3,"names":["React","StyleSheet","useWindowDimensions","View","useInternalTheme","white","getContrastingColor","Text","defaultSize","AvatarText","_ref","label","_ref$size","size","style","labelStyle","customColor","color","themeOverrides","theme","maxFontSizeMultiplier","rest","_objectWithoutProperties","_excluded","_theme$colors","_ref2","flatten","_ref2$backgroundColor","backgroundColor","colors","primary","restStyle","_excluded2","textColor","_useWindowDimensions","fontScale","createElement","_extends","width","height","borderRadius","styles","container","text","fontSize","lineHeight","numberOfLines","displayName","create","justifyContent","alignItems","textAlign","textAlignVertical"],"sources":["C:\\Users\\CICD Student\\cursor ai agent\\game_guess\\node_modules\\react-native-paper\\src\\components\\Avatar\\AvatarText.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  useWindowDimensions,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\nimport type { ThemeProp } from '../../types';\nimport getContrastingColor from '../../utils/getContrastingColor';\nimport Text from '../Typography/Text';\n\nconst defaultSize = 64;\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Initials to show as the text in the `Avatar`.\n   */\n  label: string;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Style for text container\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the title.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * Specifies the largest possible scale a text font can reach.\n   */\n  maxFontSizeMultiplier?: number;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Text size={24} label=\"XD\" />\n * );\n * ```\n */\nconst AvatarText = ({\n  label,\n  size = defaultSize,\n  style,\n  labelStyle,\n  color: customColor,\n  theme: themeOverrides,\n  maxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { backgroundColor = theme.colors?.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    customColor ??\n    getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n  const { fontScale } = useWindowDimensions();\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Text\n        style={[\n          styles.text,\n          {\n            color: textColor,\n            fontSize: size / 2,\n            lineHeight: size / fontScale,\n          },\n          labelStyle,\n        ]}\n        numberOfLines={1}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n      >\n        {label}\n      </Text>\n    </View>\n  );\n};\n\nAvatarText.displayName = 'Avatar.Text';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    textAlign: 'center',\n    textAlignVertical: 'center',\n  },\n});\n\nexport default AvatarText;\n"],"mappings":"gcAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,UAAA,uDAAAC,mBAAA,gEAAAC,IAAA,0CAU9B,OAASC,gBAAgB,0BACzB,OAASC,KAAK,qCAEd,MAAO,CAAAC,mBAAmB,uCAC1B,MAAO,CAAAC,IAAI,0BAEX,GAAM,CAAAC,WAAW,CAAG,EAAE,CA8CtB,GAAM,CAAAC,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAAC,IAAA,CASH,IARX,CAAAC,KAAK,CAAAD,IAAA,CAALC,KAAK,CAAAC,SAAA,CAAAF,IAAA,CACLG,IAAI,CAAJA,IAAI,CAAAD,SAAA,UAAGJ,WAAW,CAAAI,SAAA,CAClBE,KAAK,CAAAJ,IAAA,CAALI,KAAK,CACLC,UAAU,CAAAL,IAAA,CAAVK,UAAU,CACHC,WAAW,CAAAN,IAAA,CAAlBO,KAAK,CACEC,cAAc,CAAAR,IAAA,CAArBS,KAAK,CACLC,qBAAqB,CAAAV,IAAA,CAArBU,qBAAqB,CAClBC,IAAA,CAAAC,wBAAA,CAAAZ,IAAA,CAAAa,SAAA,EACQ,IAAAC,aAAA,CACX,GAAM,CAAAL,KAAK,CAAGf,gBAAgB,CAACc,cAAc,CAAC,CAC9C,IAAAO,KAAA,CACExB,UAAU,CAACyB,OAAO,CAACZ,KAAK,CAAC,EAAI,CAAC,CAAC,CAAAa,qBAAA,CAAAF,KAAA,CADzBG,eAAe,CAAfA,eAAe,CAAAD,qBAAA,WAAAH,aAAA,CAAGL,KAAK,CAACU,MAAM,UAAAL,aAAA,iBAAZA,aAAA,CAAcM,OAAO,CAAAH,qBAAA,CAAKI,SAAA,CAAAT,wBAAA,CAAAG,KAAA,CAAAO,UAAA,EAEpD,GAAM,CAAAC,SAAS,CACbjB,WAAW,OAAXA,WAAW,CACXV,mBAAmB,CAACsB,eAAe,CAAEvB,KAAK,CAAE,oBAAoB,CAAC,CACnE,IAAA6B,oBAAA,CAAsBhC,mBAAmB,CAAC,CAAC,CAAnCiC,SAAA,CAAAD,oBAAA,CAAAC,SAAA,CAER,MACE,CAAAnC,KAAA,CAAAoC,aAAA,CAACjC,IAAI,CAAAkC,QAAA,EACHvB,KAAK,CAAE,CACL,CACEwB,KAAK,CAAEzB,IAAI,CACX0B,MAAM,CAAE1B,IAAI,CACZ2B,YAAY,CAAE3B,IAAI,CAAG,CAAC,CACtBe,eAAA,CAAAA,eACF,CAAC,CACDa,MAAM,CAACC,SAAS,CAChBX,SAAS,CACT,EACEV,IAAI,EAERrB,KAAA,CAAAoC,aAAA,CAAC7B,IAAI,EACHO,KAAK,CAAE,CACL2B,MAAM,CAACE,IAAI,CACX,CACE1B,KAAK,CAAEgB,SAAS,CAChBW,QAAQ,CAAE/B,IAAI,CAAG,CAAC,CAClBgC,UAAU,CAAEhC,IAAI,CAAGsB,SACrB,CAAC,CACDpB,UAAU,CACV,CACF+B,aAAa,CAAE,CAAE,CACjB1B,qBAAqB,CAAEA,qBAAsB,EAE5CT,KACG,CACF,CAAC,CAEX,CAAC,CAEDF,UAAU,CAACsC,WAAW,CAAG,aAAa,CAEtC,GAAM,CAAAN,MAAM,CAAGxC,UAAU,CAAC+C,MAAM,CAAC,CAC/BN,SAAS,CAAE,CACTO,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QACd,CAAC,CACDP,IAAI,CAAE,CACJQ,SAAS,CAAE,QAAQ,CACnBC,iBAAiB,CAAE,QACrB,CACF,CAAC,CAAC,CAEF,cAAe,CAAA3C,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}