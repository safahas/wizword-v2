{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"icon\",\"size\",\"style\",\"theme\"],_excluded2=[\"backgroundColor\"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r]);}return n;},_extends.apply(null,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from\"../../core/theming\";import{white}from\"../../styles/themes/v2/colors\";import getContrastingColor from\"../../utils/getContrastingColor\";import Icon from\"../Icon\";var defaultSize=64;var Avatar=function Avatar(_ref){var _rest$color;var icon=_ref.icon,_ref$size=_ref.size,size=_ref$size===void 0?defaultSize:_ref$size,style=_ref.style,themeOverrides=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var _theme$colors;var theme=useInternalTheme(themeOverrides);var _ref2=StyleSheet.flatten(style)||{},_ref2$backgroundColor=_ref2.backgroundColor,backgroundColor=_ref2$backgroundColor===void 0?(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.primary:_ref2$backgroundColor,restStyle=_objectWithoutProperties(_ref2,_excluded2);var textColor=(_rest$color=rest.color)!=null?_rest$color:getContrastingColor(backgroundColor,white,'rgba(0, 0, 0, .54)');return React.createElement(View,_extends({style:[{width:size,height:size,borderRadius:size/2,backgroundColor:backgroundColor},styles.container,restStyle]},rest),React.createElement(Icon,{source:icon,color:textColor,size:size*0.6}));};Avatar.displayName='Avatar.Icon';var styles=StyleSheet.create({container:{justifyContent:'center',alignItems:'center'}});export default Avatar;","map":{"version":3,"names":["React","StyleSheet","View","useInternalTheme","white","getContrastingColor","Icon","defaultSize","Avatar","_ref","_rest$color","icon","_ref$size","size","style","themeOverrides","theme","rest","_objectWithoutProperties","_excluded","_theme$colors","_ref2","flatten","_ref2$backgroundColor","backgroundColor","colors","primary","restStyle","_excluded2","textColor","color","createElement","_extends","width","height","borderRadius","styles","container","source","displayName","create","justifyContent","alignItems"],"sources":["C:\\Users\\CICD Student\\cursor ai agent\\game_guess\\node_modules\\react-native-paper\\src\\components\\Avatar\\AvatarIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\nimport type { ThemeProp } from '../../types';\nimport getContrastingColor from '../../utils/getContrastingColor';\nimport Icon, { IconSource } from '../Icon';\n\nconst defaultSize = 64;\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Icon to display for the `Avatar`.\n   */\n  icon: IconSource;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the icon.\n   */\n  color?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Icon size={24} icon=\"folder\" />\n * );\n * ```\n */\nconst Avatar = ({\n  icon,\n  size = defaultSize,\n  style,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { backgroundColor = theme.colors?.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    rest.color ??\n    getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Icon source={icon} color={textColor} size={size * 0.6} />\n    </View>\n  );\n};\n\nAvatar.displayName = 'Avatar.Icon';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default Avatar;\n"],"mappings":"kZAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,UAAA,uDAAAC,IAAA,0CAG9B,OAASC,gBAAgB,0BACzB,OAASC,KAAK,qCAEd,MAAO,CAAAC,mBAAmB,uCAC1B,MAAO,CAAAC,IAAI,eAEX,GAAM,CAAAC,WAAW,CAAG,EAAE,CAmCtB,GAAM,CAAAC,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAAC,IAAA,CAMC,KAAAC,WAAA,IALX,CAAAC,IAAI,CAAAF,IAAA,CAAJE,IAAI,CAAAC,SAAA,CAAAH,IAAA,CACJI,IAAI,CAAJA,IAAI,CAAAD,SAAA,UAAGL,WAAW,CAAAK,SAAA,CAClBE,KAAK,CAAAL,IAAA,CAALK,KAAK,CACEC,cAAc,CAAAN,IAAA,CAArBO,KAAK,CACFC,IAAA,CAAAC,wBAAA,CAAAT,IAAA,CAAAU,SAAA,EACQ,IAAAC,aAAA,CACX,GAAM,CAAAJ,KAAK,CAAGb,gBAAgB,CAACY,cAAc,CAAC,CAC9C,IAAAM,KAAA,CACEpB,UAAU,CAACqB,OAAO,CAACR,KAAK,CAAC,EAAI,CAAC,CAAC,CAAAS,qBAAA,CAAAF,KAAA,CADzBG,eAAe,CAAfA,eAAe,CAAAD,qBAAA,WAAAH,aAAA,CAAGJ,KAAK,CAACS,MAAM,UAAAL,aAAA,iBAAZA,aAAA,CAAcM,OAAO,CAAAH,qBAAA,CAAKI,SAAA,CAAAT,wBAAA,CAAAG,KAAA,CAAAO,UAAA,EAEpD,GAAM,CAAAC,SAAS,EAAAnB,WAAA,CACbO,IAAI,CAACa,KAAK,QAAApB,WAAA,CACVL,mBAAmB,CAACmB,eAAe,CAAEpB,KAAK,CAAE,oBAAoB,CAAC,CAEnE,MACE,CAAAJ,KAAA,CAAA+B,aAAA,CAAC7B,IAAI,CAAA8B,QAAA,EACHlB,KAAK,CAAE,CACL,CACEmB,KAAK,CAAEpB,IAAI,CACXqB,MAAM,CAAErB,IAAI,CACZsB,YAAY,CAAEtB,IAAI,CAAG,CAAC,CACtBW,eAAA,CAAAA,eACF,CAAC,CACDY,MAAM,CAACC,SAAS,CAChBV,SAAS,CACT,EACEV,IAAI,EAERjB,KAAA,CAAA+B,aAAA,CAACzB,IAAI,EAACgC,MAAM,CAAE3B,IAAK,CAACmB,KAAK,CAAED,SAAU,CAAChB,IAAI,CAAEA,IAAI,CAAG,GAAI,CAAE,CACrD,CAAC,CAEX,CAAC,CAEDL,MAAM,CAAC+B,WAAW,CAAG,aAAa,CAElC,GAAM,CAAAH,MAAM,CAAGnC,UAAU,CAACuC,MAAM,CAAC,CAC/BH,SAAS,CAAE,CACTI,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QACd,CACF,CAAC,CAAC,CAEF,cAAe,CAAAlC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}