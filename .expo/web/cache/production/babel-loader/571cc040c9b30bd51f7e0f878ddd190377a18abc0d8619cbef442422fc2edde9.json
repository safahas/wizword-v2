{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';export var getLeftStyles=function getLeftStyles(alignToTop,description,isV3){var stylesV3={marginRight:0,marginLeft:16,alignSelf:alignToTop?'flex-start':'center'};if(!description){return _objectSpread(_objectSpread(_objectSpread({},styles.iconMarginLeft),styles.marginVerticalNone),isV3&&_objectSpread({},stylesV3));}if(!isV3){return styles.iconMarginLeft;}return _objectSpread(_objectSpread({},styles.iconMarginLeft),stylesV3);};export var getRightStyles=function getRightStyles(alignToTop,description,isV3){var stylesV3={marginLeft:16,alignSelf:alignToTop?'flex-start':'center'};if(!description){return _objectSpread(_objectSpread(_objectSpread({},styles.iconMarginRight),styles.marginVerticalNone),isV3&&_objectSpread({},stylesV3));}if(!isV3){return styles.iconMarginRight;}return _objectSpread(_objectSpread({},styles.iconMarginRight),stylesV3);};var styles=StyleSheet.create({marginVerticalNone:{marginVertical:0},iconMarginLeft:{marginLeft:0,marginRight:16},iconMarginRight:{marginRight:0}});export var getAccordionColors=function getAccordionColors(_ref){var theme=_ref.theme,isExpanded=_ref.isExpanded,customRippleColor=_ref.customRippleColor;var _theme$colors;var titleColor=theme.isV3?theme.colors.onSurface:color(theme.colors.text).alpha(0.87).rgb().string();var descriptionColor=theme.isV3?theme.colors.onSurfaceVariant:color(theme.colors.text).alpha(0.54).rgb().string();var titleTextColor=isExpanded?(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.primary:titleColor;var rippleColor=customRippleColor||color(titleTextColor).alpha(0.12).rgb().string();return{titleColor:titleColor,descriptionColor:descriptionColor,titleTextColor:titleTextColor,rippleColor:rippleColor};};","map":{"version":3,"names":["color","getLeftStyles","alignToTop","description","isV3","stylesV3","marginRight","marginLeft","alignSelf","_objectSpread","styles","iconMarginLeft","marginVerticalNone","getRightStyles","iconMarginRight","StyleSheet","create","marginVertical","getAccordionColors","_ref","theme","isExpanded","customRippleColor","_theme$colors","titleColor","colors","onSurface","text","alpha","rgb","string","descriptionColor","onSurfaceVariant","titleTextColor","primary","rippleColor"],"sources":["C:\\Users\\CICD Student\\cursor ai agent\\game_guess\\node_modules\\react-native-paper\\src\\components\\List\\utils.ts"],"sourcesContent":["import {\n  FlexAlignType,\n  ColorValue,\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport type { EllipsizeProp, InternalTheme, ThemeProp } from 'src/types';\n\ntype Description =\n  | React.ReactNode\n  | ((props: {\n      selectable: boolean;\n      ellipsizeMode: EllipsizeProp | undefined;\n      color: string;\n      fontSize: number;\n    }) => React.ReactNode);\n\nexport type ListChildProps = {\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  theme?: ThemeProp;\n};\n\nexport type Style = {\n  marginLeft?: number;\n  marginRight?: number;\n  marginVertical?: number;\n  alignSelf?: FlexAlignType;\n};\n\nexport const getLeftStyles = (\n  alignToTop: boolean,\n  description: Description,\n  isV3: boolean\n) => {\n  const stylesV3 = {\n    marginRight: 0,\n    marginLeft: 16,\n    alignSelf: alignToTop ? 'flex-start' : 'center',\n  };\n\n  if (!description) {\n    return {\n      ...styles.iconMarginLeft,\n      ...styles.marginVerticalNone,\n      ...(isV3 && { ...stylesV3 }),\n    };\n  }\n\n  if (!isV3) {\n    return styles.iconMarginLeft;\n  }\n\n  return {\n    ...styles.iconMarginLeft,\n    ...stylesV3,\n  };\n};\n\nexport const getRightStyles = (\n  alignToTop: boolean,\n  description: Description,\n  isV3: boolean\n) => {\n  const stylesV3 = {\n    marginLeft: 16,\n    alignSelf: alignToTop ? 'flex-start' : 'center',\n  };\n\n  if (!description) {\n    return {\n      ...styles.iconMarginRight,\n      ...styles.marginVerticalNone,\n      ...(isV3 && { ...stylesV3 }),\n    };\n  }\n\n  if (!isV3) {\n    return styles.iconMarginRight;\n  }\n\n  return {\n    ...styles.iconMarginRight,\n    ...stylesV3,\n  };\n};\n\nconst styles = StyleSheet.create({\n  marginVerticalNone: { marginVertical: 0 },\n  iconMarginLeft: { marginLeft: 0, marginRight: 16 },\n  iconMarginRight: { marginRight: 0 },\n});\n\nexport const getAccordionColors = ({\n  theme,\n  isExpanded,\n  customRippleColor,\n}: {\n  theme: InternalTheme;\n  isExpanded?: boolean;\n  customRippleColor?: ColorValue;\n}) => {\n  const titleColor = theme.isV3\n    ? theme.colors.onSurface\n    : color(theme.colors.text).alpha(0.87).rgb().string();\n\n  const descriptionColor = theme.isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.54).rgb().string();\n\n  const titleTextColor = isExpanded ? theme.colors?.primary : titleColor;\n\n  const rippleColor =\n    customRippleColor || color(titleTextColor).alpha(0.12).rgb().string();\n\n  return {\n    titleColor,\n    descriptionColor,\n    titleTextColor,\n    rippleColor,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}