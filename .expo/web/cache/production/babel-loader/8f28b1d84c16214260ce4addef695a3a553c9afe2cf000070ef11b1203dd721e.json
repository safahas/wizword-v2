{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"status\",\"label\",\"onPress\",\"onLongPress\",\"labelStyle\",\"theme\",\"testID\",\"mode\",\"position\",\"accessibilityLabel\",\"disabled\",\"labelVariant\",\"labelMaxFontSizeMultiplier\",\"rippleColor\",\"background\",\"hitSlop\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Checkbox from\"./Checkbox\";import CheckboxAndroid from\"./CheckboxAndroid\";import CheckboxIOS from\"./CheckboxIOS\";import{useInternalTheme}from\"../../core/theming\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import Text from\"../Typography/Text\";var CheckboxItem=function CheckboxItem(_ref){var style=_ref.style,status=_ref.status,label=_ref.label,onPress=_ref.onPress,onLongPress=_ref.onLongPress,labelStyle=_ref.labelStyle,themeOverrides=_ref.theme,testID=_ref.testID,mode=_ref.mode,_ref$position=_ref.position,position=_ref$position===void 0?'trailing':_ref$position,_ref$accessibilityLab=_ref.accessibilityLabel,accessibilityLabel=_ref$accessibilityLab===void 0?label:_ref$accessibilityLab,disabled=_ref.disabled,_ref$labelVariant=_ref.labelVariant,labelVariant=_ref$labelVariant===void 0?'bodyLarge':_ref$labelVariant,_ref$labelMaxFontSize=_ref.labelMaxFontSizeMultiplier,labelMaxFontSizeMultiplier=_ref$labelMaxFontSize===void 0?1.5:_ref$labelMaxFontSize,rippleColor=_ref.rippleColor,background=_ref.background,hitSlop=_ref.hitSlop,props=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var checkboxProps=_objectSpread(_objectSpread({},props),{},{status:status,theme:theme,disabled:disabled});var isLeading=position==='leading';var checkbox;if(mode==='android'){checkbox=React.createElement(CheckboxAndroid,checkboxProps);}else if(mode==='ios'){checkbox=React.createElement(CheckboxIOS,checkboxProps);}else{checkbox=React.createElement(Checkbox,checkboxProps);}var textColor=theme.isV3?theme.colors.onSurface:theme.colors.text;var disabledTextColor=theme.isV3?theme.colors.onSurfaceDisabled:theme.colors.disabled;var textAlign=isLeading?'right':'left';var computedStyle={color:disabled?disabledTextColor:textColor,textAlign:textAlign};return React.createElement(TouchableRipple,{accessibilityLabel:accessibilityLabel,accessibilityRole:\"checkbox\",accessibilityState:{checked:status==='checked',disabled:disabled},onPress:onPress,onLongPress:onLongPress,testID:testID,disabled:disabled,rippleColor:rippleColor,theme:theme,background:background,hitSlop:hitSlop},React.createElement(View,{style:[styles.container,style],pointerEvents:\"none\",importantForAccessibility:\"no-hide-descendants\"},isLeading&&checkbox,React.createElement(Text,{variant:labelVariant,testID:`${testID}-text`,maxFontSizeMultiplier:labelMaxFontSizeMultiplier,style:[styles.label,!theme.isV3&&styles.font,computedStyle,labelStyle]},label),!isLeading&&checkbox));};CheckboxItem.displayName='Checkbox.Item';export default CheckboxItem;export{CheckboxItem};var styles=StyleSheet.create({container:{flexDirection:'row',alignItems:'center',justifyContent:'space-between',paddingVertical:8,paddingHorizontal:16},label:{flexShrink:1,flexGrow:1},font:{fontSize:16}});","map":{"version":3,"names":["React","StyleSheet","View","Checkbox","CheckboxAndroid","CheckboxIOS","useInternalTheme","TouchableRipple","Text","CheckboxItem","_ref","style","status","label","onPress","onLongPress","labelStyle","themeOverrides","theme","testID","mode","_ref$position","position","_ref$accessibilityLab","accessibilityLabel","disabled","_ref$labelVariant","labelVariant","_ref$labelMaxFontSize","labelMaxFontSizeMultiplier","rippleColor","background","hitSlop","props","_objectWithoutProperties","_excluded","checkboxProps","_objectSpread","isLeading","checkbox","createElement","textColor","isV3","colors","onSurface","text","disabledTextColor","onSurfaceDisabled","textAlign","computedStyle","color","accessibilityRole","accessibilityState","checked","styles","container","pointerEvents","importantForAccessibility","variant","maxFontSizeMultiplier","font","displayName","create","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal","flexShrink","flexGrow","fontSize"],"sources":["C:\\Users\\CICD Student\\cursor ai agent\\game_guess\\node_modules\\react-native-paper\\src\\components\\Checkbox\\CheckboxItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  ColorValue,\n  GestureResponderEvent,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport Checkbox from './Checkbox';\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp, MD3TypescaleKey } from '../../types';\nimport TouchableRipple, {\n  Props as TouchableRippleProps,\n} from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Label to be displayed on the item.\n   */\n  label: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Accessibility label for the touchable. This is read by the screen reader when the user taps the touchable.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Additional styles for container View.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  /**\n   * Style that is passed to Label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Label text variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  labelVariant?: keyof typeof MD3TypescaleKey;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n  /**\n   * Checkbox control position.\n   */\n  position?: 'leading' | 'trailing';\n  /**\n   * Whether `<Checkbox.Android />` or `<Checkbox.IOS />` should be used.\n   * Left undefined `<Checkbox />` will be used.\n   */\n  mode?: 'android' | 'ios';\n  /**\n   * Sets additional distance outside of element in which a press can be detected.\n   */\n  hitSlop?: TouchableRippleProps['hitSlop'];\n};\n\n/**\n * Checkbox.Item allows you to press the whole row (item) instead of only the Checkbox.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Checkbox.Item label=\"Item\" status=\"checked\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n *```\n */\n\nconst CheckboxItem = ({\n  style,\n  status,\n  label,\n  onPress,\n  onLongPress,\n  labelStyle,\n  theme: themeOverrides,\n  testID,\n  mode,\n  position = 'trailing',\n  accessibilityLabel = label,\n  disabled,\n  labelVariant = 'bodyLarge',\n  labelMaxFontSizeMultiplier = 1.5,\n  rippleColor,\n  background,\n  hitSlop,\n  ...props\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const checkboxProps = { ...props, status, theme, disabled };\n  const isLeading = position === 'leading';\n  let checkbox;\n\n  if (mode === 'android') {\n    checkbox = <CheckboxAndroid {...checkboxProps} />;\n  } else if (mode === 'ios') {\n    checkbox = <CheckboxIOS {...checkboxProps} />;\n  } else {\n    checkbox = <Checkbox {...checkboxProps} />;\n  }\n\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n  const disabledTextColor = theme.isV3\n    ? theme.colors.onSurfaceDisabled\n    : theme.colors.disabled;\n  const textAlign = isLeading ? 'right' : 'left';\n\n  const computedStyle = {\n    color: disabled ? disabledTextColor : textColor,\n    textAlign,\n  } as TextStyle;\n\n  return (\n    <TouchableRipple\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{\n        checked: status === 'checked',\n        disabled,\n      }}\n      onPress={onPress}\n      onLongPress={onLongPress}\n      testID={testID}\n      disabled={disabled}\n      rippleColor={rippleColor}\n      theme={theme}\n      background={background}\n      hitSlop={hitSlop}\n    >\n      <View\n        style={[styles.container, style]}\n        pointerEvents=\"none\"\n        importantForAccessibility=\"no-hide-descendants\"\n      >\n        {isLeading && checkbox}\n        <Text\n          variant={labelVariant}\n          testID={`${testID}-text`}\n          maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n          style={[\n            styles.label,\n            !theme.isV3 && styles.font,\n            computedStyle,\n            labelStyle,\n          ]}\n        >\n          {label}\n        </Text>\n        {!isLeading && checkbox}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nCheckboxItem.displayName = 'Checkbox.Item';\n\nexport default CheckboxItem;\n\n// @component-docs ignore-next-line\nexport { CheckboxItem };\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  label: {\n    flexShrink: 1,\n    flexGrow: 1,\n  },\n  font: {\n    fontSize: 16,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}